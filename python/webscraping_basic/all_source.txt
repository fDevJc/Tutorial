import requests
from bs4 import BeautifulSoup

for year in range(2015,2020):

    url = "https://search.daum.net/search?w=tot&q={}%EB%85%84%EC%98%81%ED%99%94%EC%88%9C%EC%9C%84&DA=MOR&rtmaxcoll=MOR".format(year)

    res=requests.get(url)

    res.raise_for_status

    soup=BeautifulSoup(res.text,"lxml")

    images = soup.find_all("img",attrs={"class":"thumb_img"})

    for idx,image in enumerate(images):
        image_url = image["src"]
        if image_url.startswith("//"):
            image_url = "https:" + image_url

        print(image_url)
        image_res = requests.get(image_url)
        image_res.raise_for_status()

        with open("movie{}_{}.jpg".format(year,idx+1),"wb") as f:
            f.write(image_res.content)

        if idx >= 4:
            break
import csv
import requests
from bs4 import BeautifulSoup


url = "https://finance.naver.com/sise/sise_market_sum.nhn?sosok=0&page="

filename = "시가총약 1-200.csv"

f = open(filename,"w",encoding="utf-8-sig",newline="")
writer = csv.writer(f)

title = "N	종목명	현재가	전일비	등락률	액면가	시가총액	상장주식수	외국인비율	거래량	PER	ROE	토론실".split("\t")
print(type(title))
writer.writerow(title)

for page in range(1,2):
    res = requests.get(url+str(page))

    res.raise_for_status()

    soup = BeautifulSoup(res.text,"lxml")

  
    data_rows = soup.find("table", attrs={"class":"type_2"}).find("tbody").find_all("tr")
    for row in data_rows:
        columns = row.find_all("td")
        
        if len(columns) <= 1:
            continue
        
        data = [column.get_text().strip() for column in columns]
        #print(data)
        writer.writerow(data)

print("finish")
f.close()
from selenium import webdriver

#browser = webdriver.Chrome("./chromedriver.exe")

browser = webdriver.Chrome()

browser.get("http://naver.com")

C:\python\webscraping_basic>python
Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from selenium import webdriver
>>> browser = webdriver.Chrome()

DevTools listening on ws://127.0.0.1:63026/devtools/browser/c28ab5b2-391d-4ba0-88ed-8f82dcdf692f
>>> [9316:16764:1228/203327.755:ERROR:device_event_log_impl.cc(211)] [20:33:27.756] USB: usb_device_handle_win.cc:1020 Failed to read descriptor from node connection: 시스템에 부착된 장치가 작동하지 않습 니다. (0x1F)
browser = webdriver.Chrome()

DevTools listening on ws://127.0.0.1:63044/devtools/browser/c242e342-f21a-45dd-b5cd-62720444c758
>>> [20072:13772:1228/203358.044:ERROR:device_event_log_impl.cc(211)] [20:33:58.044] USB: usb_device_handle_win.cc:1020 Failed to read descriptor from node connection: 시스템에 부착된 장치가 작동하지 않습니다. (0x1F)
^Z
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>>
KeyboardInterrupt
>>> browser = webdriver.Chrome()

DevTools listening on ws://127.0.0.1:63062/devtools/browser/ec3c6366-9293-4304-a3b1-05c56f180e2d
>>> "                 28/203433.111:ERROR:device_event_log_impl.cc(211)] [20:34:33.111] USB:
  File "<stdin>", line 1:1020 Failed to read descriptor from node connection: 시스템에 부착된    "가 작동하지 않습니다. (0x1F)
     ^
SyntaxError: EOL while scanning string literal
>>>
>>>
>>>
>>> browser.get("http://naver.com")
>>> elem = browser.find_element_by_class_name("link_login")
>>> elem
<selenium.webdriver.remote.webelement.WebElement (session="8c60d30a5c2380631cb29b3f8e8fb118", element="37450c8b-d8cc-4c38-88c5-0bd889f4aee4")>
>>> elem.click()
>>> browser.back()
>>> browser.forward()
>>> browser.refresh()
>>> browser.bakc()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'WebDriver' object has no attribute 'bakc'
>>> browser.back()
>>> elem = browser.find_element_by_id("query")
>>> elem
<selenium.webdriver.remote.webelement.WebElement (session="8c60d30a5c2380631cb29b3f8e8fb118", element="30eb8b05-e47d-4ad6-a5f9-faac8143250b")>
>>> from selenium.webdriver.common.keys import keys
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: cannot import name 'keys' from 'selenium.webdriver.common.keys' (C:\Users\양지철\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\common\keys.py)
>>> from selenium.webdriver.common.keys import Keys
>>> elem.send_keys("나도코딩")
>>> elem.send_keys(Keys.ENTER)
>>> elem = browser.find_element_by_tag_name("a")
>>> elem
<selenium.webdriver.remote.webelement.WebElement (session="8c60d30a5c2380631cb29b3f8e8fb118", element="3376a2ac-cfa5-428d-b6b4-e50a3eed7f9b")>
>>>
>>>
>>>
>>>
>>>
>>>
>>> elem = browser.find_elements_by_tag_name("a")
>>> for e in elem:
...     elem.get_attribute("href")
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'list' object has no attribute 'get_attribute'
>>>
>>> for e in elem:
...     e.get_attribute("href")
...
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#lnb'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#content'
'https://www.naver.com/'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://help.naver.com/support/alias/search/word/word_29.naver'
'https://help.naver.com/support/alias/search/word/word_29.naver'
'https://help.naver.com/support/alias/search/word/word_29.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://help.naver.com/support/alias/search/word/word_16.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://help.naver.com/support/alias/search/word/word_16.naver'
'https://nid.naver.com/nidlogin.login?url=https%3A%2F%2Fsearch.naver.com%2Fsearch.naver%3Fwhere%3Dnexearch%26sm%3Dtop_hty%26fbm%3D0%26ie%3Dutf8%26query%3D%25EB%2582%2598%25EB%258F%2584%25EC%25BD%2594%25EB%2594%25A9'
'https://help.naver.com/support/alias/search/word/word_16.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://help.naver.com/support/alias/search/word/word_17.naver'
'https://help.naver.com/support/alias/search/word/word_18.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/nidlogin.login?url=https%3A%2F%2Fsearch.naver.com%2Fsearch.naver%3Fwhere%3Dnexearch%26sm%3Dtop_hty%26fbm%3D0%26ie%3Dutf8%26query%3D%25EB%2582%2598%25EB%258F%2584%25EC%25BD%2594%25EB%2594%25A9'
'javascript:;'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/user2/api/naverProfile.nhn?m=checkIdType'
'https://nid.naver.com/user2/api/naverProfile.nhn?m=checkIdType'
'https://nid.naver.com/nidlogin.logout?returl=https%3A%2F%2Fsearch.naver.com%2Fsearch.naver%3Fwhere%3Dnexearch%26sm%3Dtop_hty%26fbm%3D0%26ie%3Dutf8%26query%3D%25EB%2582%2598%25EB%258F%2584%25EC%25BD%2594%25EB%2594%25A9'
'https://mail.naver.com/'
'https://nid.naver.com/user2/help/myInfo.nhn?menu=home'
'https://nid.naver.com/user2/help/myInfo.nhn?m=viewSecurity&menu=security'
'https://nid.naver.com/user2/eSign/v1/home/land'
'https://nid.naver.com/membership/my'
'https://pay.naver.com/'
'https://blog.naver.com/MyBlog.nhn'
'https://section.cafe.naver.com/'
'https://pay.naver.com/'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'javascript:;'
'https://noti.naver.com/index.nhn'
'https://mail.naver.com/'
'javascript:;'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://cafe.naver.com/'
'https://news.naver.com/'
'https://map.naver.com/'
'https://sports.news.naver.com/'
'https://game.naver.com/'
'https://section.blog.naver.com/'
'https://post.naver.com/main.nhn'
'https://dict.naver.com/'
'https://kin.naver.com/'
'https://n.weather.naver.com/'
'https://mail.naver.com/'
'https://stock.naver.com/'
'https://land.naver.com/'
'https://vibe.naver.com/today/'
'https://book.naver.com/'
'https://shopping.naver.com/'
'https://comic.naver.com/'
'https://movie.naver.com/'
'https://mybox.naver.com/'
'https://auto.naver.com/'
'https://campaign.naver.com/npay/rediret/index.nhn'
'https://www.naver.com/more.html'
'https://www.naver.com/more.html'
'https://dict.naver.com/'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://book.naver.com/search/search.nhn?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=image&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=kin&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=video&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.shopping.naver.com/search/all.nhn?where=all&frm=NVSCTAB&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=news&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=realtime&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://dict.naver.com/search.nhn?dicQuery=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&target=dic&query_utf=&isOnlyViewEE='
'https://map.naver.com/v5/search/%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://vibe.naver.com/search?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=kdic&sm=tab_jum&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://audioclip.naver.com/search/all?keyword=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://academic.naver.com/search.naver?field=0&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://help.naver.com/support/alias/search/integration/integration_4.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://www.youtube.com/channel/UC7iAOLiALt2rtMVAWWl4pnw'
'https://www.youtube.com/channel/UC7iAOLiALt2rtMVAWWl4pnw'
'https://www.youtube.com/channel/UC7iAOLiALt2rtMVAWWl4pnw'
'https://www.youtube.com/channel/UC7iAOLiALt2rtMVAWWl4pnw'
'https://play.google.com/store/apps/details?id=com.hafali.cardpair'
'https://play.google.com/store/apps/details?id=com.hafali.pyramid'
'https://help.naver.com/support/alias/search/contents/contents08.naver'
'https://m.onestore.co.kr/'
'https://www.apple.com/kr/app-store/'
'https://play.google.com/store/apps'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=view&sm=tab_viw.all&mode=normal'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=blog&sm=tab_viw.all'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=article&sm=tab_viw.all'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=view&sm=tab_viw.all&mode=normal'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=view&sm=tab_viw.all&mode=timeline'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=view&sm=tab_viw.all&mode=image'
'https://blog.naver.com/yuzyoe/222184041560'
'https://blog.naver.com/yuzyoe'
'https://blog.naver.com/yuzyoe'
'https://blog.naver.com/yuzyoe/222184041560'
'https://blog.naver.com/yuzyoe/222184041560'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EC%A7%80%EB%8F%84%EC%82%AC'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EC%A7%80%EB%8F%84%EC%82%AC%EC%9E%90%EA%B2%A9%EC%A6%9D'
'https://blog.naver.com/simon9627/221848111545'
'https://blog.naver.com/simon9627'
'https://blog.naver.com/simon9627'
'https://blog.naver.com/simon9627/221848111545'
'https://blog.naver.com/simon9627/221848111545'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=AI'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%99%9C%EC%9A%A9%ED%95%9C'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%95%B1'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%A7%8C%EB%93%A4%EA%B8%B0'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%96%B4%ED%94%8C%ED%95%98%EB%82%98%EB%A9%B4'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EB%A7%88%EC%8A%A4%ED%84%B0'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EA%B5%90%EC%9C%A1%EC%95%B1'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%8A%A4%EB%A7%88%ED%8A%B8%EB%A9%94%EC%9D%B4%EC%BB%A4'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%9E%85%EB%AC%B8%EA%B5%90%EC%9C%A1'
'https://blog.naver.com/you_0_0/222186625399'
'https://blog.naver.com/you_0_0'
'https://blog.naver.com/you_0_0'
'https://blog.naver.com/you_0_0/222186625399'
'https://blog.naver.com/you_0_0/222186625399'
'https://blog.naver.com/kos339'
'https://blog.naver.com/kos339'
'https://blog.naver.com/kos339/222188106045'
'https://blog.naver.com/kos339/222188106045'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC%EB%8F%85%ED%95%99'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%9C%A0%ED%88%AC%EB%B2%84'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EC%84%A0%EC%83%9D%EB%8B%98'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EA%B3%B5%EB%B6%80'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EA%B0%9C%EB%B0%9C%EC%9E%90'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%AC%B8%EA%B3%BC'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=python3'
'https://blog.naver.com/wjdwngkdsla/221884221493'
'https://blog.naver.com/wjdwngkdsla'
'https://blog.naver.com/wjdwngkdsla'
'https://blog.naver.com/wjdwngkdsla/221884221493'
'https://blog.naver.com/wjdwngkdsla/221884221493'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC%EA%B8%B0%EC%B4%88'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%9C%A0%ED%8A%9C%EB%B2%84%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC%ED%95%A8%EC%88%98'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC%EB%B3%80%EC%88%98'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%8A%AC%EA%B8%B0%EB%A1%9C%EC%9A%B4%EC%9D%98%EC%82%AC%EC%83%9D%ED%99%9C'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EC%B4%88%EB%B3%B4'
'https://blog.naver.com/jslee3929'
'https://blog.naver.com/jslee3929'
'https://blog.naver.com/jslee3929/222176640269'
'https://blog.naver.com/jslee3929/222176640269'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EA%B0%95%EC%9D%98%EB%85%B8%ED%8A%B8'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EA%B8%B0%EB%B3%B8%ED%8E%B8'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%ED%8C%8C%EC%9D%B4%EC%8D%AC%EA%B0%95%EC%9D%98'
'https://blog.naver.com/jslee3929/222180639154'
'https://blog.naver.com/pauseand/221502721283'
'https://blog.naver.com/pauseand'
'https://blog.naver.com/pauseand'
'https://blog.naver.com/pauseand/221502721283'
'https://blog.naver.com/pauseand/221502721283'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%9D%B4%EB%A7%88%ED%8A%B8%ED%95%98%EB%82%A8%EC%A0%90'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%AC%B8%ED%99%94%EC%84%BC%ED%84%B0'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%B9%99%EA%B8%80%EC%97%90%EC%8A%A4'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%9E%90%EC%9C%A8%EC%A3%BC%ED%96%89'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%93%9C%EB%A1%A0%EB%A0%88%EC%9D%B4%EC%84%9C'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%97%90%EB%93%80%EB%B0%94%EC%9D%B4'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EB%AF%B8%EB%9E%98%EA%B5%90%EC%9C%A1'
'https://search.naver.com/search.naver?where=view&sm=tab_viw.all&query=%EC%BD%94%EB%94%A9%EB%A1%9C%EB%B4%87'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=&where=view&sm=tab_nmr&mode=normal'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://coding.yah.ac/'
'https://coding.yah.ac/'
'https://coding.yah.ac/'
'https://coding.yah.ac/'
'https://spartacodingclub.kr/'
'https://spartacodingclub.kr/'
'https://spartacodingclub.kr/'
'https://spartacodingclub.kr/curriculum/web'
'https://spartacodingclub.kr/portfolio'
'https://spartacodingclub.kr/review'
'https://spartacodingclub.kr/online/webplus'
'https://spartacodingclub.kr/online/sql'
'https://spartacodingclub.kr/online/app'
'https://spartacodingclub.kr/'
'https://programmers.co.kr/learn/courses/28'
'https://programmers.co.kr/learn/courses/28'
'https://programmers.co.kr/learn/courses/28'
'https://programmers.co.kr/learn/courses/28'
'http://www.yes24.com/Product/Goods/56783566'
'http://www.yes24.com/Product/Goods/56783566'
'http://www.yes24.com/Product/Goods/56783566'
'http://www.yes24.com/Product/Goods/56783566'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=2&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=1&where=web'
'javascript:;'
'https://audioclip.naver.com/channels/1388/clips/103'
'https://audioclip.naver.com/channels/1388'
'javascript:;'
'https://audioclip.naver.com/channels/1388/clips/104'
'https://audioclip.naver.com/channels/1388'
'javascript:;'
'https://audioclip.naver.com/channels/1388/clips/77'
'https://audioclip.naver.com/channels/1388'
'https://audioclip.naver.com/search/episodes?keyword=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://kin.naver.com/qna/question.nhn'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=1040101&docId=368456977&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=1&search_sort=0&spq=0'
'https://kin.naver.com/search/one2oneLink?dirId=1040101&docId=368456977&answerNo=2'
'https://kin.naver.com/search/profileLink?dirId=1040101&docId=368456977&answerNo=2'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=1040101&docId=368456977&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=1&search_sort=0&spq=0'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=1040101&docId=368460628&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=1&search_sort=0&spq=0'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=102020101&docId=115199866&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=1&search_sort=0&spq=0'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=kin&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9%20age&nso=so%3Ar%2Ca%3Aall%2Cp%3Aall'
'https://search.naver.com/search.naver?where=kin&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9%20what&nso=so%3Ar%2Ca%3Aall%2Cp%3Aall'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=10402&docId=339710614&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=2&search_sort=0&spq=0'
'https://kin.naver.com/search/one2oneLink?dirId=10402&docId=339710614&answerNo=2'
'https://kin.naver.com/search/profileLink?dirId=10402&docId=339710614&answerNo=2'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=10402&docId=339710614&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=2&search_sort=0&spq=0'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=10406&docId=372830218&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=3&search_sort=0&spq=0'
'https://kin.naver.com/search/one2oneLink?dirId=10406&docId=372830218&answerNo=1'
'https://kin.naver.com/search/profileLink?dirId=10406&docId=372830218&answerNo=1'
'https://kin.naver.com/qna/detail.nhn?d1id=1&dirId=10406&docId=372830218&qb=64KY64+E7L2U65Sp&enc=utf8&section=kin.ext&rank=3&search_sort=0&spq=0'
'https://search.naver.com/search.naver?where=kin&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&nso=so%3Ar%2Ca%3Aall%2Cp%3Aall&sm=tab_nmr'
'http://cafe.naver.com/zbook/2828'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/nidlogin.login?svctype=262144'
'http://cafe.naver.com/zbook/2828'
'http://cafe.naver.com/zbook'
'http://blog.naver.com/firekokuma2/222132369230?rvid=D1632D5BBED048E91ACA56E9BE4B1EE33E3D'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/nidlogin.login?svctype=262144'
'http://blog.naver.com/firekokuma2/222132369230?rvid=D1632D5BBED048E91ACA56E9BE4B1EE33E3D'
'http://blog.naver.com/firekokuma2'
'https://tv.naver.com/v/17513152'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/nidlogin.login?svctype=262144'
'https://tv.naver.com/v/17513152'
'https://tv.naver.com/narangna'
'https://www.youtube.com/watch?v=-jRSXLKm1v4'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://nid.naver.com/nidlogin.login?svctype=262144'
'https://www.youtube.com/watch?v=-jRSXLKm1v4'
'https://www.youtube.com/channel/UCwXo4SrEekae2qQA2XRBQzw'
'https://search.naver.com/search.naver?where=video&ie=utf8&nso=&sm=tab_nmr&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9'
'https://search.naver.com/search.naver?query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&sm=tab_pge&where=nexearch'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=2&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=1&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=3&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=11&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=4&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=21&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=5&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=31&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=6&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=41&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=7&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=51&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=61&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=9&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=71&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=10&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=81&where=web'
'https://search.naver.com/search.naver?display=10&f=&filetype=0&page=11&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9&research_url=&sm=tab_pge&start=1&where=web'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EA%B9%80%EC%A7%84%EC%9A%B1+%EC%9D%B4%EA%B1%B4%EB%A6%AC'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EA%B3%B5%EC%88%98%EC%B2%98%EC%9E%A5+%ED%9B%84%EB%B3%B4'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EB%98%90+%EB%A7%88%EC%95%BD+%ED%98%90%EC%9D%98%EB%A1%9C+%EC%9E%85%EA%B1%B4'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EC%9E%90%EA%B0%80%EA%B2%A9%EB%A6%AC+%EC%A4%91+%EC%83%9D%EC%9D%BC%ED%8C%8C%ED%8B%B0'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EC%9C%A0%ED%8A%9C%EB%B2%84+%EA%B5%AD%EA%B0%80%EB%B9%84'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EB%82%B4%EB%85%84+2%EC%9B%94%EB%B6%80%ED%84%B0+%EB%B0%B1%EC%8B%A0+%EC%A0%91%EC%A2%85'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EB%B0%B1%EC%8B%A0+%EC%A0%91%EC%A2%85+%EC%8B%9C%EC%9E%91%EB%90%90%EC%A7%80%EB%A7%8C'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EB%82%A8%EC%96%91%EC%9C%A0%EC%97%85+%EC%99%B8%EC%86%90%EB%85%80+%ED%99%A9%ED%95%98%EB%82%98'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EC%A7%91%ED%96%89%EC%9C%A0%EC%98%88+%EC%A4%91%EC%97%90'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.nws&ie=utf8&query=%EA%B9%80%EA%B7%BC%EC%8B%9D+%EC%84%9C%EC%9A%B8%EC%8B%9C%EC%9E%A5+%EC%B6%9C%EB%A7%88'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EA%B9%80%EB%AA%85%EC%88%98+%EC%9E%85%EB%8C%80'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EC%A0%95%EA%B2%BD%EB%AF%B8+%EC%9C%A4%ED%98%95%EB%B9%88'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EB%9D%BC%EC%9D%B8%EC%97%85+%EA%B3%B5%EA%B0%9C'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EC%95%84%EB%A6%84%EB%8B%A4%EC%9B%A0%EB%8D%98+%EC%9A%B0%EB%A6%AC%EC%97%90%EA%B2%8C+%EC%86%8C%EC%A3%BC%EC%97%B0'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%ED%8E%9C%ED%8A%B8%ED%95%98%EC%9A%B0%EC%8A%A4+%EC%9D%B4%EC%A7%80%EC%95%84'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=2020+KBS+%EC%97%B0%EA%B8%B0%EB%8C%80%EC%83%81+%EC%8A%A4%ED%8E%98%EC%85%9C+MC'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EB%B9%84%EA%B8%B4%EC%96%B4%EA%B2%8C%EC%9D%B8+%EC%98%A4%ED%94%88%EB%A7%88%EC%9D%B4%ED%81%AC'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EC%97%91%EC%86%8C+%EB%94%94%EC%98%A4+1%EC%9B%94+25%EC%9D%BC+%EB%AF%B8%EB%B3%B5%EA%B7%80+%EC%A0%84%EC%97%AD'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EB%AA%A8%EB%AA%A8%EB%9E%9C%EB%93%9C+%EB%82%B8%EC%8B%9C+10%EC%9C%84'
'https://search.naver.com/search.naver?where=nexearch&sm=tab_htk.ent&ie=utf8&query=%EC%86%A1%EA%B0%80%EC%9D%B8+%ED%8C%AC%ED%81%B4%EB%9F%BD'
'https://help.naver.com/support/alias/search/word/word_3.naver'
'https://search.naver.com/search.naver?where=nexearch&sm=top_hty&fbm=0&ie=utf8&query=%EB%82%98%EB%8F%84%EC%BD%94%EB%94%A9#'
'https://www.naver.com/more.html'
'https://policy.naver.com/policy/service.html'
'https://policy.naver.com/policy/privacy.html'
'https://help.naver.com/support/alias/search/integration/integration_1.naver'
'https://www.navercorp.com/'
>>>
>>>
>>>
>>>
>>>
>>> browser.get("http://daum.net")
>>> elem = browser.find_element_by_name("q")
>>>
>>> elem
<selenium.webdriver.remote.webelement.WebElement (session="8c60d30a5c2380631cb29b3f8e8fb118", element="ad944a8a-33a7-4752-ad34-6375cc122f94")>
>>>
>>> elem.send_keys("나도코딩")
>>> elem.send_keys(Keys.ENTER)
>>> browser.back()
>>> elem.send_keys("나도코딩")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\양지철\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webelement.py", line 477, in send_keys
    self._execute(Command.SEND_KEYS_TO_ELEMENT,
  File "C:\Users\양지철\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webelement.py", line 633, in _execute
    return self._parent.execute(command, params)
  File "C:\Users\양지철\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
  File "C:\Users\양지철\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document
  (Session info: chrome=87.0.4280.88)

>>> elem = browser.find_element_by_name("q")
>>> elem.send_keys("나도코딩")
>>> \
...
>>>
>>>
>>> elem = browser.fine_element_by_xpath("//*[@id='daumSearch']/fieldset/div/div/button[2]")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'WebDriver' object has no attribute 'fine_element_by_xpath'
>>> elem = browser.find_element_by_xpath("//*[@id='daumSearch']/fieldset/div/div/button[2]")
>>>
>>> elem
<selenium.webdriver.remote.webelement.WebElement (session="8c60d30a5c2380631cb29b3f8e8fb118", element="d51be4e2-a16f-485a-bdf8-59177a3cf104")>
>>> elem.click()
>>> browser.quit()
>>> exit
Use exit() or Ctrl-Z plus Return to exit
>>> exit()
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

browser = webdriver.Chrome()

#1. 네이버로 이동
browser.get("http://naver.com")

#2. 로그인버튼 클릭
elem = browser.find_element_by_class_name("link_login")
elem.click()

#3. 아이디입력
elem = browser.find_element_by_id("id")
elem.send_keys("naver_id")
#4. 패스워드입력
elem = browser.find_element_by_id("pw")
elem.send_keys("password")
#5. 로그인버튼 클릭
elem = browser.find_element_by_id("log.login")
elem.click()

#이렇게 할경우 뒤에 붙어서 나옴
#elem = browser.find_element_by_id("id").send_keys("my_id")


browser.find_element_by_id("id").clear()
elem = browser.find_element_by_id("id").send_keys("my_id")

#6. html 정보 출력
print(browser.page_source)

#브라우저 종료
browser.quit()
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

browser = webdriver.Chrome()

browser.maximize_window() #창 최대화

url = "https://flight.naver.com/flights/"

browser.get(url)

browser.find_element_by_link_text("가는날 선택").click()

browser.find_elements_by_link_text("30")[0].click()
browser.find_elements_by_link_text("31")[1].click()

browser.find_element_by_xpath('//*[@id="recommendationList"]/ul/li[1]/div/span').click()

browser.find_element_by_link_text("항공권 검색").click()

#로딩되는동안 기다리는 코드
try:
    elem = WebDriverWait(browser, 10).until(EC.presence_of_element_located((By.XPATH,'//*[@id="content"]/div[2]/div/div[4]/ul/li[1]')))
    print(elem.text)
finally:
    browser.quit()


#elem = browser.find_element_by_xpath('//*[@id="content"]/div[2]/div/div[4]/ul/li[1]')

#print(elem.text)
import requests
from bs4 import BeautifulSoup

url = "https://play.google.com/store/movies/top"
headers = {
    "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
    ,"Accept-Language":"ko-KR,ko"
    }
res = requests.get(url,headers=headers)

res.raise_for_status()
soup = BeautifulSoup(res.text,"lxml")

movies = soup.find_all("div",attrs={"class":"ImZGtf mpg5gc"})

print(len(movies))

for movie in movies:
    title = movie.find("div",attrs={"class":"WsMG1c nnK0zc"}).get_text()

    print(title)

#soup.prettify() html 문서를 이쁘게 만들어줌
#import requests
#from bs4 import BeautifulSoup
'''
url = "https://play.google.com/store/movies/top"
headers = {
    "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
    ,"Accept-Language":"ko-KR,ko"
    }
res = requests.get(url,headers=headers)

res.raise_for_status()
soup = BeautifulSoup(res.text,"lxml")

movies = soup.find_all("div",attrs={"class":"ImZGtf mpg5gc"})

print(len(movies))

for movie in movies:
    title = movie.find("div",attrs={"class":"WsMG1c nnK0zc"}).get_text()

    print(title)

#soup.prettify() html 문서를 이쁘게 만들어줌
'''

from selenium import webdriver


browser = webdriver.Chrome()
browser.maximize_window()

#페이지 이동
url = "https://play.google.com/store/movies/top"
browser.get(url)

#지정한 위치로 스크롤 내리기 높이 1080위치로 스크롤 내리기
#browser.execute_script("window.scrollTo(0,2080)")

#화면 가장 아래로 스크롤 내리기
#browser.execute_script("window.scrollTo(0, document.body.scrollHeight)")

import time
interval = 2 #2초에 한번씩 스크롤 내림

#현재 문서 높이를 가져와서 저장
prev_height = browser.execute_script("return document.body.scrollHeight")

#반복수행
while True:
    #스크롤을 가장아래로 
    browser.execute_script("window.scrollTo(0, document.body.scrollHeight)")

    #페이지 로딩 대기
    time.sleep(interval)

    #현재 문서 높이를 가져와서 저장
    curr_height = browser.execute_script("return document.body.scrollHeight")
    if curr_height == prev_height:
        break

    prev_height = curr_height

    

from selenium import webdriver


browser = webdriver.Chrome()
browser.maximize_window()

#페이지 이동
url = "https://play.google.com/store/movies/top"
browser.get(url)

#지정한 위치로 스크롤 내리기 높이 1080위치로 스크롤 내리기
#browser.execute_script("window.scrollTo(0,2080)")

#화면 가장 아래로 스크롤 내리기
#browser.execute_script("window.scrollTo(0, document.body.scrollHeight)")

import time
interval = 2 #2초에 한번씩 스크롤 내림

#현재 문서 높이를 가져와서 저장
prev_height = browser.execute_script("return document.body.scrollHeight")

#반복수행
while True:
    #스크롤을 가장아래로 
    browser.execute_script("window.scrollTo(0, document.body.scrollHeight)")

    #페이지 로딩 대기
    time.sleep(interval)

    #현재 문서 높이를 가져와서 저장
    curr_height = browser.execute_script("return document.body.scrollHeight")
    if curr_height == prev_height:
        break

    prev_height = curr_height
print("스크롤 완료")
import requests
from bs4 import BeautifulSoup

soup = BeautifulSoup(browser.page_source,"lxml")

#movies = soup.find_all("div",attrs={"class":["ImZGtf mpg5gc","Vpfmgd"]}) #클래스명이 ImZGtf mpg5gc 이거나 Vpfmgd 이거 둘다 가져옴
movies = soup.find_all("div",attrs={"class":"Vpfmgd"}) #클래스명이 ImZGtf mpg5gc 이거나 Vpfmgd 이거 둘다 가져옴

print(len(movies))

for movie in movies:
    title = movie.find("div",attrs={"class":"WsMG1c nnK0zc"}).get_text()

    #할인된영화 가지고오기
    sale_movie = movie.find("span",attrs={"class":"SUZt4c djCuy"})
    nosale_movie = movie.find("span",attrs={"class":"VfPpfd ZdBevf"})

    if sale_movie :
        print("영화제목 : {} ,가격 {} -> {}".format(title,sale_movie.get_text(),nosale_movie.get_text()))
    else :
        print("영화제목 : {} ,가격 {}".format(title,nosale_movie.get_text()))
    

from selenium import webdriver

options = webdriver.ChromeOptions()
options.headless=True
options.add_argument("window-size=1920x1080")

browser = webdriver.Chrome(options=options)
browser.maximize_window()

#페이지 이동
url = "https://play.google.com/store/movies/top"
browser.get(url)

import time
interval = 2 #2초에 한번씩 스크롤 내림

#현재 문서 높이를 가져와서 저장
prev_height = browser.execute_script("return document.body.scrollHeight")

#반복수행
while True:
    #스크롤을 가장아래로 
    browser.execute_script("window.scrollTo(0, document.body.scrollHeight)")

    #페이지 로딩 대기
    time.sleep(interval)

    #현재 문서 높이를 가져와서 저장
    curr_height = browser.execute_script("return document.body.scrollHeight")
    if curr_height == prev_height:
        break

    prev_height = curr_height
print("스크롤 완료")

#스크린샷
browser.get_screenshot_as_file("google_movie.png")

import requests
from bs4 import BeautifulSoup

soup = BeautifulSoup(browser.page_source,"lxml")

#movies = soup.find_all("div",attrs={"class":["ImZGtf mpg5gc","Vpfmgd"]}) #클래스명이 ImZGtf mpg5gc 이거나 Vpfmgd 이거 둘다 가져옴
movies = soup.find_all("div",attrs={"class":"Vpfmgd"}) #클래스명이 ImZGtf mpg5gc 이거나 Vpfmgd 이거 둘다 가져옴

print(len(movies))

for movie in movies:
    title = movie.find("div",attrs={"class":"WsMG1c nnK0zc"}).get_text()

    #할인된영화 가지고오기
    sale_movie = movie.find("span",attrs={"class":"SUZt4c djCuy"})
    nosale_movie = movie.find("span",attrs={"class":"VfPpfd ZdBevf"})

    if sale_movie :
        print("영화제목 : {} ,가격 {} -> {}".format(title,sale_movie.get_text(),nosale_movie.get_text()))
    else :
        print("영화제목 : {} ,가격 {}".format(title,nosale_movie.get_text()))
    
from selenium import webdriver

options = webdriver.ChromeOptions()
options.headless=True
options.add_argument("window-size=1920x1080")
options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36")

browser = webdriver.Chrome(options=options)
browser.maximize_window()

url = "https://www.whatismybrowser.com/detect/what-is-my-user-agent"

browser.get(url)

id = browser.find_element_by_id("detected_value")

print(id.text)
#user-agent 넣기전
#Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/87.0.4280.88 Safari/537.36
#user-agent 넣은후
#Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36


#구글에서 selenium with python 검색해서 공부하면됨

browser.quit()
import requests
res=requests.get("http://google.com")
#res=requests.get("http://nadocoding.tistory1.com")

#200이면 정상
'''
if(res.status_code == requests.codes.ok) :
    print("정상입니다")
else:
    print("에러코드 : ",res.status_code)

'''
res.raise_for_status()
#print("웹 스크래핑을 진행합니다")

print(len(res.text))

print(res.text)

with open("mygoogle.html", "w" , encoding = "utf-8") as f:
    f.write(res.text)
'''
정규식
주민등록번호
900210-1111111

이메일 주소
asdb@fsdf.com

차량번호
11가 1234
123가 1234

ip주소
192.168.10.10

'''
import re
#알파벳 4개
# abcd .... zzzz
# ca?e

def print_match(m):
    if m:
        print("m.group() : ",m.group())     #일치하는 문자열 반환
        print("m.string : ",m.string)       #입력받은 문자열
        print("m.start() : ",m.start())     #일치하는 문자열의 시작 index
        print("m.end() : ",m.end())         #일치하는 문자열의 끝 index
        print("m.span : ",m.span())         #일치하는 문자열의 시작 / 끝 index
    else:
        print("no")
       
p = re.compile("ca.e")
#. ca.e : 하나의 문자를 의미 > care , cafe (O) / caffe (X)
#^ ^de  : 문자열의 시작 > desk , destination (O) / fade (X)
#$ se$  : 문자열의 끝 > case , base (O) / face (X)

#m = p.match("careless") #주어진 문자열의 처음부터 일치하는지 확인하는것이기떄문에 매치됨
#m = p.match("careless")
#print_match(m)
#print(m.group()) #매치되지않으면 에러
'''
if m:
    print(m.group())
else:
    print("no")
    


m = p.search("good care") #search : 주어진 문자열 중에 일치하는게 있는지 확인
print_match(m)
'''

lst = p.findall("good care cafe") #findall : 일치하는 모든 것을 리스트 형태로 반환
print(lst)

'''
1.
p = re.compile("원하는 형태")
2.
m = p.match("비교할 문자열")
m = p.search("비교할 문자열")
lst = p.findall("비교할 문자열")

원하는 형태 : 정규식
#. ca.e : 하나의 문자를 의미 > care , cafe (O) / caffe (X)
#^ ^de  : 문자열의 시작 > desk , destination (O) / fade (X)
#$ se$  : 문자열의 끝 > case , base (O) / face (X)

#실습관련 사이트
w3school
lean python
regular expression에서 공부

python re
공식 파이썬 홈페이지에 있음

'''
import requests


url = "http://nadocoding.tistory.com"
headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"}


res=requests.get(url,headers=headers)

res.raise_for_status()

with open("nadocoding.html", "w" , encoding = "utf-8") as f:
    f.write(res.text)
import requests
from bs4 import BeautifulSoup

url = "https://comic.naver.com/webtoon/weekday.nhn"

res = requests.get(url)

res.raise_for_status()

soup = BeautifulSoup(res.text, "lxml")
'''
#print(soup.title)
#print(soup.title.get_text())
#print(soup.a) #처음으로 발견되는 a엘리먼트를 찾아줌
#print(soup.a.attrs)#속성정보를 출력
#print(soup.a["href"])#특정 속성값 출력


#print(soup.find("a", attrs={"class":"Nbtn_upload"})) #class값이 Nbtn_upload인  a엘리먼트를 찾아라
#print(soup.find(attrs={"class":"Nbtn_upload"}))#class값이 Nbtn_upload인  엘리먼트를 찾아라


#print(soup.find("li",attrs={"class":"rank01"}))
#rank1 = soup.find("li",attrs={"class":"rank01"})
#print(rank1.a.get_text())

rank1 = soup.find("li",attrs={"class":"rank01"})
#print(rank1.a.get_text())
#rank2 = rank1.next_sibling.next_sibling
#rank3 = rank2.next_sibling.next_sibling
#print(rank3.a.get_text())
#rank2 = rank3.previous_sibling.previous_sibling
#print(rank2.a.get_text())

#print(rank1.parent)

rank2 = rank1.find_next_sibling("li")
print(rank2.a.get_text())
rank3 = rank2.find_next_sibling("li")
print(rank3.a.get_text())

rank2 = rank3.find_previous_sibling("li")
print(rank2.a.get_text())

rank1 = soup.find("li",attrs={"class":"rank01"})
print(rank1.find_next_siblings("li"))

for i in rank1.find_next_siblings("li"):
    print(i.a.get_text())
'''
webtoon = soup.find("a", text="맘마미안-74화")
print(webtoon)
import requests
from bs4 import BeautifulSoup
url = "https://comic.naver.com/webtoon/weekday.nhn"
res = requests.get(url)
res.raise_for_status()
soup = BeautifulSoup(res.text, "lxml")

#네이버 웹툰 전체목록 가져오기
cartoons = soup.find_all("a",attrs={"class":"title"})

#class 속성이 title 인 모든 a element 확인
for cartoon in cartoons:
    print(cartoon.get_text())
import requests
from bs4 import BeautifulSoup
url = "https://comic.naver.com/webtoon/list.nhn?titleId=602910&weekday=mon"
res = requests.get(url)
res.raise_for_status()
soup = BeautifulSoup(res.text, "lxml")

windbreakers = soup.find_all("td",attrs={"class":"title"})

for wind in windbreakers :
    title = wind.find("a").get_text()
    link = wind.find("a")["href"]
    star = wind.find_next_sibling("td").find("strong").get_text()
    print(star)
    
#beautifulsoup 도큐먼트있음
'''
#http method
get 방식 : url
post 방식 : 바디에 숨겨서
'''


import requests
import re
from bs4 import BeautifulSoup


headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"}

for i in range(1,6):
    print("page : ", i)
    url = "https://www.coupang.com/np/search?q=%EB%85%B8%ED%8A%B8%EB%B6%81&channel=user&component=&eventCategory=SRP&trcid=&traid=&sorter=scoreDesc&minPrice=&maxPrice=&priceRange=&filterType=&listSize=36&filter=&isPriceRange=false&brand=&offerCondition=&rating=0&page={}&rocketAll=false&searchIndexingToken=1=4&backgroundColor=".format(i)
    res=requests.get(url,headers=headers)
    res.raise_for_status()

    soup = BeautifulSoup(res.text,"lxml")

    items = soup.find_all("li",attrs={"class":re.compile("^search-product")})

    for item in items:
        #광고제품은 제외
        ad_badge = item.find("span",attrs={"class":"ad-badge-text"})
        if ad_badge:
            continue           
        name = item.find("div",attrs={"class":"name"}).get_text()

        #apple 제품제외
        if "Apple" in name:
            continue        
        price = item.find("strong",attrs={"class":"price-value"}).get_text()

        #리뷰 100개 이상 , 평점 4.5이상
        
        rate = item.find("em",attrs={"class":"rating"})
        if rate:
            rate = rate.get_text()
        else :
            rate = "평점없음"
            continue
        rate_cnt = item.find("span",attrs={"class":"rating-total-count"})
        if rate_cnt:
            rate_cnt = rate_cnt.get_text()[1:-1]
        else :
            rate_cnt = "평점수없음"
            continue

        if float(rate) >= 4.5 and int(rate_cnt) >= 100:
            print(name,price,rate,rate_cnt)        


'''
#http method
get 방식 : url
post 방식 : 바디에 숨겨서
'''


import requests
import re
from bs4 import BeautifulSoup

url = "https://www.coupang.com/np/search?q=%EB%85%B8%ED%8A%B8%EB%B6%81&channel=user&component=&eventCategory=SRP&trcid=&traid=&sorter=scoreDesc&minPrice=&maxPrice=&priceRange=&filterType=&listSize=36&filter=&isPriceRange=false&brand=&offerCondition=&rating=0&page=1&rocketAll=false&searchIndexingToken=1=4&backgroundColor="
headers = {"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"}

res=requests.get(url,headers=headers)
res.raise_for_status()

soup = BeautifulSoup(res.text,"lxml")

items = soup.find_all("li",attrs={"class":re.compile("^search-product")})

#print(items[0].find("div",attrs={"class":"name"}).get_text())

for item in items:
    #광고제품은 제외
    ad_badge = item.find("span",attrs={"class":"ad-badge-text"})
    if ad_badge:
        print("광고상품제외")
        continue
        
    
    name = item.find("div",attrs={"class":"name"}).get_text()

    #apple 제품제외
    if "Apple" in name:
        print("애플 상품 제외")
        continue
    
    price = item.find("strong",attrs={"class":"price-value"}).get_text()

    #리뷰 100개 이상 , 평점 4.5이상
    
    rate = item.find("em",attrs={"class":"rating"})
    if rate:
        rate = rate.get_text()
    else :
        rate = "평점없음"
        print("평점 없는 상품")
        continue
    rate_cnt = item.find("span",attrs={"class":"rating-total-count"})
    if rate_cnt:
        rate_cnt = rate_cnt.get_text()
        rate_cnt = rate_cnt[1:-1]
    else :
        rate_cnt = "평점수없음"
        print("평점수 없는 상품")
        continue

    if float(rate) >= 4.5 and int(rate_cnt) >= 100:
        print(name,price,rate,rate_cnt)        


import os

path = "./"
file_list = os.listdir(path)

file_name = "all_source.txt"

for file in file_list:
    if file.find(".py") > 0:
        with open(file_name,"a",encoding="utf8") as wf:
            with open(file,"r",encoding="utf8") as rf:
                wf.write(rf.read())
                print(file,": 종료")
import requests
from bs4 import BeautifulSoup

url = "https://search.daum.net/search?w=tot&DA=YZR&t__nil_searchbox=btn&sug=&sugo=&sq=&o=&q=%EC%86%A1%ED%8C%8C+%ED%97%AC%EB%A6%AC%EC%98%A4%EC%8B%9C%ED%8B%B0"

res = requests.get(url)
res.raise_for_status()
soup = BeautifulSoup(res.text,"lxml")

#hrml파일 만들기
#with open("quiz.html","w",encoding="utf8") as f:
#          f.write(soup.prettify())


table = soup.find("table",attrs={"class":"tbl"})
trs = table.find_all("tr")

for idx,tr in enumerate(trs):
    columns = tr.find_all("td")
    if idx == 0:
        continue
    print("="*5,"매물",str(idx),"="*5)
    #print("거래 :",tr.find("td",attrs={"class":"col1"}).get_text())
    print("거래 :",columns[0].get_text())
    #print("면적 :",tr.find("td",attrs={"class":"col2"}).get_text())
    print("면적 :",columns[1].get_text())
    #print("가격 :",tr.find("td",attrs={"class":"col3"}).get_text())
    #print("동 :",tr.find("td",attrs={"class":"col4"}).get_text())
    #print("층 :",tr.find("td",attrs={"class":"col5"}).get_text())
        
#셀레니움 임포트
from selenium import webdriver

#옵션설정
options = webdriver.ChromeOptions()
options.headless=True
options.add_argument("window-size=1920x1080")
options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36")

#browser 설정
browser = webdriver.Chrome(options=options)
browser.maximize_window()

url = "https://finance.naver.com/sise/sise_market_sum.nhn?sosok=1&page=17"

browser.get(url)

browser.find_element_by_id("option21").click()
browser.find_element_by_id("option6").click()
browser.find_element_by_id("option12").click()
browser.find_element_by_id("option11").click()
browser.find_element_by_id("option25").click()

browser.find_element_by_xpath('//*[@id="contentarea_left"]/div[2]/form/div/div/div/a[1]/img').click()

browser.get_screenshot_as_file("naver_stock.png")




browser.quit()
